import{t as y,a as m}from"../chunks/1_3qMnhu.js";import{i as h}from"../chunks/BGApbqIr.js";import{p as x,a as v}from"../chunks/vGGeAnpI.js";import{o as E}from"../chunks/FsYfmZwR.js";let s;const w=typeof TextDecoder<"u"?new TextDecoder("utf-8",{ignoreBOM:!0,fatal:!0}):{decode:()=>{throw Error("TextDecoder not available")}};typeof TextDecoder<"u"&&w.decode();let d=null;function l(){return(d===null||d.byteLength===0)&&(d=new Uint8Array(s.memory.buffer)),d}function _(e,t){return e=e>>>0,w.decode(l().subarray(e,e+t))}let p=0;const u=typeof TextEncoder<"u"?new TextEncoder("utf-8"):{encode:()=>{throw Error("TextEncoder not available")}},A=typeof u.encodeInto=="function"?function(e,t){return u.encodeInto(e,t)}:function(e,t){const n=u.encode(e);return t.set(n),{read:e.length,written:n.length}};function I(e,t,n){if(n===void 0){const a=u.encode(e),f=t(a.length,1)>>>0;return l().subarray(f,f+a.length).set(a),p=a.length,f}let i=e.length,o=t(i,1)>>>0;const c=l();let r=0;for(;r<i;r++){const a=e.charCodeAt(r);if(a>127)break;c[o+r]=a}if(r!==i){r!==0&&(e=e.slice(r)),o=n(o,i,i=r+e.length*3,1)>>>0;const a=l().subarray(o+r,o+i),f=A(e,a);r+=f.written,o=n(o,i,r,1)>>>0}return p=r,o}const b=typeof FinalizationRegistry>"u"?{register:()=>{},unregister:()=>{}}:new FinalizationRegistry(e=>s.__wbg_postscriptinterpreter_free(e>>>0,1));class R{__destroy_into_raw(){const t=this.__wbg_ptr;return this.__wbg_ptr=0,b.unregister(this),t}free(){const t=this.__destroy_into_raw();s.__wbg_postscriptinterpreter_free(t,0)}constructor(){const t=s.postscriptinterpreter_new();return this.__wbg_ptr=t>>>0,b.register(this,this.__wbg_ptr,this),this}run_interpreter(t){let n,i;try{const o=I(t,s.__wbindgen_malloc,s.__wbindgen_realloc),c=p,r=s.postscriptinterpreter_run_interpreter(this.__wbg_ptr,o,c);return n=r[0],i=r[1],_(r[0],r[1])}finally{s.__wbindgen_free(n,i,1)}}}async function T(e,t){if(typeof Response=="function"&&e instanceof Response){if(typeof WebAssembly.instantiateStreaming=="function")try{return await WebAssembly.instantiateStreaming(e,t)}catch(i){if(e.headers.get("Content-Type")!="application/wasm")console.warn("`WebAssembly.instantiateStreaming` failed because your server does not serve Wasm with `application/wasm` MIME type. Falling back to `WebAssembly.instantiate` which is slower. Original error:\n",i);else throw i}const n=await e.arrayBuffer();return await WebAssembly.instantiate(n,t)}else{const n=await WebAssembly.instantiate(e,t);return n instanceof WebAssembly.Instance?{instance:n,module:e}:n}}function S(){const e={};return e.wbg={},e.wbg.__wbindgen_init_externref_table=function(){const t=s.__wbindgen_export_0,n=t.grow(4);t.set(0,void 0),t.set(n+0,void 0),t.set(n+1,null),t.set(n+2,!0),t.set(n+3,!1)},e.wbg.__wbindgen_throw=function(t,n){throw new Error(_(t,n))},e}function W(e,t){return s=e.exports,g.__wbindgen_wasm_module=t,d=null,s.__wbindgen_start(),s}async function g(e){if(s!==void 0)return s;typeof e<"u"&&(Object.getPrototypeOf(e)===Object.prototype?{module_or_path:e}=e:console.warn("using deprecated parameters for the initialization function; pass a single object instead")),typeof e>"u"&&(e=new URL(""+new URL("../assets/wasm_bg.DA9Yac3D.wasm",import.meta.url).href,import.meta.url));const t=S();(typeof e=="string"||typeof Request=="function"&&e instanceof Request||typeof URL=="function"&&e instanceof URL)&&(e=fetch(e));const{instance:n,module:i}=await T(await e,t);return W(n,i)}var D=y(`<div class="h-screen flex flex-col sm:flex-row items-center gap-y-6"><div class="basis-auto sm:basis-2/3 p-6 text-center"><h1 class="font-bold text-5xl text-[#E5DCC5] pt-12 sm:pt-4">PostScript Interpreter</h1> <p class="italic text-balance pt-12">Originally a project from one of my classes, I really liked how it turned out and I decided to continue adjusting and adding nice touches to my code! It was my first project using Rust and the code is <span class="line-through">horrible</span></p></div> <div class="sm:basis-1/3 mockup-code w-full flex flex-col justify-between p-4"><pre data-prefix="ps>" class="flex items-center gap-2">        <input type="text" id="input" placeholder="Enter PostScript command" class="bg-transparent text-white border border-gray-600 rounded px-2 py-1 w-full">
      </pre> <div class="w-full flex justify-end pt-4"><button id="run" class="btn btn-sm btn-outline">Run</button></div> <div id="output"></div></div></div>`);function O(e,t){x(t,!1);let n;E(async()=>{await g(),n=new R,document.getElementById("run").addEventListener("click",async()=>{const o=document.getElementById("input").value,c=n.run_interpreter(o),r=document.getElementById("output");r&&c?r.textContent=c:r&&(r.textContent="")})}),h();var i=D();m(e,i),v()}export{O as component};
